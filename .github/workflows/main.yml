name: CI/CD Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.sha }}
  NAME: ${{ github.repository_id }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}-
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    if: github.event_name != 'pull_request'
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << EOF
          version: '3'
          services:
            app:
              image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
              container_name: ${{ env.NAME }}
              ports:
                - "3000:3000"
              restart: always
          EOF

      - name: Deploy
        run: |
          docker-compose pull
          docker-compose down || true
          docker-compose up -d
          docker image prune -af